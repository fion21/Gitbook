{"version":3,"sources":["components/layout/Navbar.js","components/users/UserItem.js","components/users/Users.js","App.js","index.js"],"names":["Navbar","icon","title","className","defaultProps","UserItem","user","login","avatar_url","html_url","src","alt","style","width","href","Users","userStyle","this","props","users","map","key","id","Component","display","gridTemplateColumns","gridGap","App","state","loading","a","setState","axios","get","res","data","ReactDOM","render","document","getElementById"],"mappings":"oOAGMA,EAAS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACpB,OACI,yBAAKC,UAAU,qBACX,4BACI,uBAAGA,UAAWF,IADlB,IAC4BC,KAMxCF,EAAOI,aAAe,CAClBF,MAAO,UACPD,KAAM,iBAQKD,QCIAK,EAxBE,SAAC,GAA+C,IAAD,IAA5CC,KAAQC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,SAC3C,OACI,yBAAKN,UAAU,oBACX,yBACIO,IAAKF,EACLG,IAAI,GACJR,UAAU,YACVS,MAAO,CAAEC,MAAO,UAEpB,4BAAKN,GAEL,6BACI,uBAAGO,KAAML,EAAUN,UAAU,4BAA7B,WCZVY,E,4JACF,WACI,OACI,yBAAKH,MAAOI,GACPC,KAAKC,MAAMC,MAAMC,KAAI,SAAAd,GAAI,OACtB,kBAAC,EAAD,CAAUe,IAAKf,EAAKgB,GAAIhB,KAAMA,Y,GAL9BiB,aAYdP,EAAY,CACdQ,QAAS,OACTC,oBAAqB,iBACrBC,QAAS,QAGEX,I,iBCWAY,G,kNAzBbC,MAAQ,CACNT,MAAO,GACPU,SAAS,G,8FAGX,4BAAAC,EAAA,6DACEb,KAAKc,SAAS,CAAEF,SAAS,IAD3B,SAGoBG,IAAMC,IAAI,gCAH9B,OAGQC,EAHR,OAKEjB,KAAKc,SAAS,CAAEZ,MAAOe,EAAIC,KAAMN,SAAS,IAL5C,gD,0EAQA,WACE,OACE,yBAAK1B,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAO0B,QAASZ,KAAKW,MAAMC,QAASV,MAAOF,KAAKW,MAAMT,c,GAnB9CI,cCFlBa,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b3a1d7cb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Navbar = ({ icon, title }) => {\n    return (\n        <nav className='navbar bg-primary'>\n            <h1>\n                <i className={icon} /> {title}\n            </h1>\n        </nav>\n    );\n};\n\nNavbar.defaultProps = {\n    title: 'Gitbook',\n    icon: 'fab fa-github'\n};\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired\n};\n\nexport default Navbar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\n    return (\n        <div className='card text-center'>\n            <img\n                src={avatar_url}\n                alt=''\n                className='round-img'\n                style={{ width: '60px' }}\n            />\n            <h3>{login}</h3>\n\n            <div>\n                <a href={html_url} className='btn btn-dark btn-sm my-1'>\n                    More\n        </a>\n            </div>\n        </div>\n    );\n};\n\nUserItem.propTypes = {\n    user: PropTypes.object.isRequired\n};\n\nexport default UserItem;","import React, { Component } from 'react';\nimport UserItem from './UserItem';\n\nclass Users extends Component {\n    render() {\n        return (\n            <div style={userStyle}>\n                {this.props.users.map(user => (\n                    <UserItem key={user.id} user={user} />\n                ))}\n            </div>\n        );\n    }\n}\n\nconst userStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridGap: '1rem'\n};\n\nexport default Users;","import React, { Component } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    users: [],\n    loading: false\n  };\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n\n    const res = await axios.get('https://api.github.com/users');\n\n    this.setState({ users: res.data, loading: false });\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Navbar />\n        <div className='container'>\n          <Users loading={this.state.loading} users={this.state.users} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}